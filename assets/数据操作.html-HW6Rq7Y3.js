import{_ as n,o as s,c as a,d as e}from"./app-jFZM-UYu.js";const p={},t=e(`<h1 id="数据操作" tabindex="-1"><a class="header-anchor" href="#数据操作" aria-hidden="true">#</a> 数据操作</h1><h2 id="添加数据" tabindex="-1"><a class="header-anchor" href="#添加数据" aria-hidden="true">#</a> 添加数据</h2><h3 id="单条" tabindex="-1"><a class="header-anchor" href="#单条" aria-hidden="true">#</a> 单条</h3><p>添加数据时，如果值的数量或顺序与数据表定义的字段数量或顺序不同，必须<strong>指定字段</strong>。 指定字段可以是表中的全部字段或部分字段</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token punctuation">[</span><span class="token keyword">INTO</span><span class="token punctuation">]</span> 表名 <span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> {<span class="token keyword">VALUES</span><span class="token operator">|</span><span class="token keyword">VALUE</span>}
<span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
关键字<span class="token keyword">INTO</span>可以省略，省略后效果相同。
字段名表示需要添加数据的字段名称，字段名的顺序需要与值的顺序一一对应，多个字段名之间使用英文逗号分隔。
<span class="token keyword">VALUES</span>和<span class="token keyword">VALUE</span>表示值，可以任选其一，通常情况下使用<span class="token keyword">VALUES</span>。
值表示字段对应的数据，多个值之间使用英文逗号分隔。

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果省略字段，那么值的顺序必须和数据表定义的字段顺序相同。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token punctuation">[</span><span class="token keyword">INTO</span><span class="token punctuation">]</span> 表名 {<span class="token keyword">VALUES</span><span class="token operator">|</span><span class="token keyword">VALUE</span>} <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>扩展 insert中的set子句</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token punctuation">[</span><span class="token keyword">INTO</span><span class="token punctuation">]</span> 表名 <span class="token keyword">SET</span> 字段名<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">[</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="多条" tabindex="-1"><a class="header-anchor" href="#多条" aria-hidden="true">#</a> 多条</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">[</span><span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span> {<span class="token keyword">VALUES</span><span class="token operator">|</span><span class="token keyword">VALUE</span>}
<span class="token punctuation">(</span>第<span class="token number">1</span>条记录的值<span class="token number">1</span><span class="token punctuation">,</span> 第<span class="token number">1</span>条记录的值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
<span class="token punctuation">(</span>第<span class="token number">2</span>条记录的值<span class="token number">1</span><span class="token punctuation">,</span> 第<span class="token number">2</span>条记录的值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">(</span>第n条记录的值<span class="token number">1</span><span class="token punctuation">,</span> 第n条记录的值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 如果未指定字段名，则值的顺序要与数据表的字段顺序一致。</span>
<span class="token comment">-- 如果指定了字段名，则值的顺序与指定的字段名顺序一致。</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h2><h3 id="部分" tabindex="-1"><a class="header-anchor" href="#部分" aria-hidden="true">#</a> 部分</h3><p>更新部分数据指通过WHERE子句指定更新数据条件，根据条件更新数据表中的一条或者多条数据。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 字段名<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">[</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token keyword">WHERE</span> 条件表达式<span class="token punctuation">;</span>
<span class="token comment">-- SET子句用于指定表中要更新的字段名及相应的值。</span>
<span class="token comment">-- WHERE子句用于指定表中要更新的记录，WHERE后跟指定条件，只有满足了指定条件的记录才会被更新。</span>

<span class="token comment">-- SET子句中的字段名是要更新的字段名称，值是字段被更新后的值。如果想要在原字段值的基础上更新，可以使用加（+）、减（-）、乘（*）、除（/）运算符。</span>
<span class="token comment">-- 例如，age的值是18，“age+1”表示在原基础上加1，结果为19。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全部" tabindex="-1"><a class="header-anchor" href="#全部" aria-hidden="true">#</a> 全部</h3><p>使用UPDATE语句更新数据时，如果不添加WHERE子句，则会将表中所有数据的指定字段全部更新。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 字段名<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">[</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">-- SET子句用于指定表中要修改的字段名及相应的值。其中，字段名是要修改的字段的名称，值为相应字段名被修改后的值。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h2><h3 id="部分-1" tabindex="-1"><a class="header-anchor" href="#部分-1" aria-hidden="true">#</a> 部分</h3><p>使用DELETE语句可以删除部分数据，通过WHERE子句可以指定删除数据的条件。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件表达式<span class="token punctuation">;</span>
表名是要删除的数据表名称
<span class="token keyword">WHERE</span>子句用于设置删除的条件，满足条件的数据会被删除
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全部-1" tabindex="-1"><a class="header-anchor" href="#全部-1" aria-hidden="true">#</a> 全部</h3><p>使用DELETE语句可以删除数据表中的全部数据，在使用时省略WHERE子句即可</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用truncate语句来删除数据表中所有的数据" tabindex="-1"><a class="header-anchor" href="#使用truncate语句来删除数据表中所有的数据" aria-hidden="true">#</a> 使用TRUNCATE语句来删除数据表中所有的数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span> <span class="token punctuation">[</span><span class="token keyword">TABLE</span><span class="token punctuation">]</span> 表名<span class="token punctuation">;</span>

<span class="token comment">-- 如果字段值设置了AUTO_INCREMENT属性：</span>
<span class="token comment">-- 使用TRUNCATE删除数据后，再次添加数据时，该字段的值是从1开始自增。</span>
<span class="token comment">-- 使用DELETE语句删除数据，字段值不会从1开始自增，而是保持原有的自动增长值。</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),c=[t];function o(l,i){return s(),a("div",null,c)}const d=n(p,[["render",o],["__file","数据操作.html.vue"]]);export{d as default};
