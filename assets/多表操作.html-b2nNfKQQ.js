import{_ as n,o as s,c as a,d as p}from"./app-jFZM-UYu.js";const t={},e=p(`<h1 id="多表操作" tabindex="-1"><a class="header-anchor" href="#多表操作" aria-hidden="true">#</a> 多表操作</h1><h2 id="连接查询" tabindex="-1"><a class="header-anchor" href="#连接查询" aria-hidden="true">#</a> 连接查询</h2><h3 id="交叉连接查询" tabindex="-1"><a class="header-anchor" href="#交叉连接查询" aria-hidden="true">#</a> 交叉连接查询</h3><p>A表中有3个字段4条记录，B表中有2个字段3条记录 结果表中有3+2个字段，4*3条记录</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>完整写法:
<span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span><span class="token punctuation">;</span>
简写:
<span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内连接查询" tabindex="-1"><a class="header-anchor" href="#内连接查询" aria-hidden="true">#</a> 内连接查询</h3><p>保存两个表中交集部分</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="自查询" tabindex="-1"><a class="header-anchor" href="#自查询" aria-hidden="true">#</a> 自查询</h3><p>一张数据表与它自身连接,在物理上为同一张数据表，但逻辑上分为两张数据表。 自连接查询必须为表设置别名，需要通过别名对两张数据表进行区分。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表<span class="token number">1</span> 别名<span class="token number">1</span> <span class="token keyword">JOIN</span> 表<span class="token number">1</span> 别名<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="联合查询" tabindex="-1"><a class="header-anchor" href="#联合查询" aria-hidden="true">#</a> 联合查询</h3><p>ALL关键字：表示保留所有查询结果。 DISTINCT关键字：默认选项，表示去除查询结果中完全重复的数据。 联合查询的字段来源于第一条查询语句，多个联合查询的字段数量必须一致(要和第一张表中的字段数一致)。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">UNION</span> <span class="token punctuation">[</span><span class="token keyword">ALL</span><span class="token operator">|</span><span class="token keyword">DISTINCT</span><span class="token punctuation">]</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表<span class="token number">2</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="外连接" tabindex="-1"><a class="header-anchor" href="#外连接" aria-hidden="true">#</a> 外连接</h3><h4 id="左外" tabindex="-1"><a class="header-anchor" href="#左外" aria-hidden="true">#</a> 左外</h4><p>左表的全部加上左右两表的交集 用左表的记录匹配右表的记录，查询结果中包括左表中的所有记录，以及右表中满足连接条件的记录。如果左表的某条记录在右表中不存在，则右表中对应字段的值显示为NULL。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 表名<span class="token punctuation">.</span>字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token keyword">FROM</span> 左表 <span class="token keyword">LEFT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 右表 <span class="token keyword">ON</span> 连接条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="右外" tabindex="-1"><a class="header-anchor" href="#右外" aria-hidden="true">#</a> 右外</h4><p>右表的全部加上左右两表的交集 用右表的记录匹配左表的记录，查询结果中包括右表中的所有记录，以及左表中满足连接条件的记录。如果右表的某条记录在左表中不存在，则左表中对应字段的值显示为NULL。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 表名<span class="token punctuation">.</span>字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token keyword">FROM</span> 左表 <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 右表 <span class="token keyword">ON</span> 连接条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="tip" tabindex="-1"><a class="header-anchor" href="#tip" aria-hidden="true">#</a> Tip</h3><hr><p>左外连接查询和右外连接查询是可以相互替换的。当LEFT JOIN和RIGHT JOIN相互替换时，将左、右表的位置也相互替换，即可得到相同的结果。</p><hr><h2 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h2><h3 id="标量子查询" tabindex="-1"><a class="header-anchor" href="#标量子查询" aria-hidden="true">#</a> 标量子查询</h3><p>返回结果为一行一列数据的子查询。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 字段名{<span class="token operator">=</span><span class="token operator">|</span><span class="token operator">&lt;&gt;</span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token operator">&gt;=</span><span class="token operator">|</span><span class="token operator">&lt;</span><span class="token operator">|</span><span class="token operator">&lt;=</span>}
<span class="token punctuation">(</span><span class="token keyword">SELECT</span> 字段名 <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">HAVING</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列子查询" tabindex="-1"><a class="header-anchor" href="#列子查询" aria-hidden="true">#</a> 列子查询</h3><p>返回结果为多行一列数据的子查询。 列子查询常用的运算符：</p><ol><li>in 在指定的集合范围之内，多选一</li><li>not in 不在指定的集合范围之内</li><li>any 子查询返回列表中，有任意一个满足条件的即可</li><li>some 与any左右相同</li><li>all 子查询返回的所有值都必须满足</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>字段 <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 字段名{<span class="token operator">IN</span><span class="token operator">|</span><span class="token operator">NOT</span> <span class="token operator">IN</span><span class="token operator">|</span><span class="token keyword">ANY</span><span class="token operator">|</span><span class="token keyword">SOME</span><span class="token operator">|</span><span class="token keyword">ALL</span>}
<span class="token punctuation">(</span><span class="token keyword">SELECT</span> 字段名 <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">HAVING</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="行子查询" tabindex="-1"><a class="header-anchor" href="#行子查询" aria-hidden="true">#</a> 行子查询</h3><p>返回结果为一行多列数据的子查询。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>{字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>} <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> {指定字段名<span class="token number">1</span><span class="token punctuation">,</span> 指定字段名<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>} {<span class="token operator">=</span><span class="token operator">|</span><span class="token operator">&lt;&gt;</span><span class="token operator">|</span><span class="token operator">IN</span><span class="token operator">|</span><span class="token operator">NOT</span> <span class="token operator">IN</span>} <span class="token punctuation">(</span><span class="token keyword">SELECT</span> 字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">[</span><span class="token keyword">WHERE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">HAVING</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="表子查询" tabindex="-1"><a class="header-anchor" href="#表子查询" aria-hidden="true">#</a> 表子查询</h3><p>返回结果为多行多列数据的子查询。 表子查询多位于FROM关键字之后,将查询到的数据当作数据源。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token keyword">FROM</span> <span class="token punctuation">(</span>表子查询<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token keyword">AS</span><span class="token punctuation">]</span> 别名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">HAVING</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="exists子查询" tabindex="-1"><a class="header-anchor" href="#exists子查询" aria-hidden="true">#</a> EXISTS子查询</h3><p>用于判断满足给定条件的记录是否存在。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token operator">|</span>字段名<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">HAVING</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,42),o=[e];function c(l,u){return s(),a("div",null,o)}const i=n(t,[["render",c],["__file","多表操作.html.vue"]]);export{i as default};
